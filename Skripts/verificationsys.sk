options:
    reset-every: 30 minutes # 1 second, 1 minute, 1 hour, 1 day, 1 month, 1 year. Delete this and every {@reset-every} part to remove this.
    success-title: "&aSuccess!" with subtitle "&aYou have passed the Verification System Successfully." to {_p} for 1 second with fade in 0.5 seconds and fade out 1 seconds
    failed-title: "&cError." with subtitle "&cYou did not pass the Verification System." to {_p} for 1 second with fade in 0.5 seconds and fade out 1 seconds
    already-verified-title: "&aWelcome!" with subtitle "&aYou already passed the Verification System." to {_p} for 1 second with fade in 0.5 seconds and fade out 1 seconds

# VerifyGui
function verify(p: player):
    if {verified::%{_p}'s uuid%} is not set:
        create a gui with virtual chest inventory with 5 rows named "Active Verification &8| &f%{_p}%":
            make gui slot (all integers between 0 and 44) with black stained glass pane named "&7" with all item flags:
                cancel event
                send title {@failed-title}
                verify({_p})
            make gui slot 4 with knowledge book named "&aClick the Paper Named ""Verify"" to verify your account."
            set {_rand} to random integer between 0 and 44
            make gui slot {_rand} with paper named "&aVerify":
                close inventory of {_p}
                send title {@success-title}
                set {verified::%{_p}'s uuid%} to true
        open last gui to {_p}
    else:
        send title {@already-verified-title}

# Makes it so they can't close the inventory!
function bypass_blocker(p: player):
    if {verified::%{_p}'s uuid%} is not set:
        verify({_p})

# Manually Reset Verification VIA Console
command /reset-verification:
    executable by: console
    trigger:
        delete {verified::*}
        broadcast "&8[&7Console&8] &aCleared Verified Data."

# --> Ignored Events <-- #

on join:
    verify(player)

every {@reset-every}:
    delete {verified::*}
    broadcast "&aCleared Verified Data."

on inventory close:
    wait 2.5 seconds
    bypass_blocker(player)
